#pragma kernel CSsunOnSurface

#include "ShaderLibrary/Precomputation_Common.hlsl"

// Sun On Surface
RWTexture2D<float3> _RWsunOnSurfaceLUT;

float3 Transmittance1(float cosAngle01, float height01)
{
    float2 particleDensityCP = _IntegralCPDensityLUT.SampleLevel(_trilinearClampSampler, float2(cosAngle01, height01), 0.0).xy;
    float3 TrCP = particleDensityCP.x * _ExtinctionR;
    float3 TmCP = particleDensityCP.y * _ExtinctionM;
    return exp(-TrCP - TmCP);
}

// =================================================================================
// PrecomputeSunOnSurface
// =================================================================================
float3 ComputeSunOnSurface(float cosAngle01, float height01)
{
    return _LightFromOuterSpace * Transmittance1(cosAngle01, height01);
}

[numthreads(8, 8, 1)]
void CSsunOnSurface(uint3 id: SV_DispatchThreadID)
{
    int w, h;
    _RWsunOnSurfaceLUT.GetDimensions(w, h);
    
    float cosAngle01 = (float)id.x / w;
    float height01 = (float)id.y / h;
    
    _RWsunOnSurfaceLUT[id.xy] = ComputeSunOnSurface(cosAngle01, height01);
}